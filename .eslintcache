[{"/Users/justinquan/Desktop/code/gn-frontend/src/index.tsx":"1","/Users/justinquan/Desktop/code/gn-frontend/src/state/Store.tsx":"2","/Users/justinquan/Desktop/code/gn-frontend/src/views/HomePage.tsx":"3","/Users/justinquan/Desktop/code/gn-frontend/src/views/AuthTestPage.tsx":"4","/Users/justinquan/Desktop/code/gn-frontend/src/views/OrdersPage.tsx":"5","/Users/justinquan/Desktop/code/gn-frontend/src/state/Actions.ts":"6","/Users/justinquan/Desktop/code/gn-frontend/src/views/MenuPage.tsx":"7","/Users/justinquan/Desktop/code/gn-frontend/src/App.tsx":"8","/Users/justinquan/Desktop/code/gn-frontend/src/components/CartList.tsx":"9","/Users/justinquan/Desktop/code/gn-frontend/src/views/LandingPage.tsx":"10","/Users/justinquan/Desktop/code/gn-frontend/src/components/CartCard.tsx":"11","/Users/justinquan/Desktop/code/gn-frontend/src/components/Card.tsx":"12","/Users/justinquan/Desktop/code/gn-frontend/src/components/MealsList.tsx":"13","/Users/justinquan/Desktop/code/gn-frontend/src/components/VenmoBtn.tsx":"14"},{"size":1473,"mtime":1610312594951,"results":"15","hashOfConfig":"16"},{"size":1679,"mtime":1610866774482,"results":"17","hashOfConfig":"16"},{"size":296,"mtime":1610312540382,"results":"18","hashOfConfig":"16"},{"size":3362,"mtime":1610323965227,"results":"19","hashOfConfig":"16"},{"size":3206,"mtime":1610868272499,"results":"20","hashOfConfig":"16"},{"size":3355,"mtime":1610312542409,"results":"21","hashOfConfig":"16"},{"size":2131,"mtime":1610312536891,"results":"22","hashOfConfig":"16"},{"size":1246,"mtime":1610312582974,"results":"23","hashOfConfig":"16"},{"size":928,"mtime":1610312549348,"results":"24","hashOfConfig":"16"},{"size":10311,"mtime":1610312539690,"results":"25","hashOfConfig":"16"},{"size":2281,"mtime":1610312544210,"results":"26","hashOfConfig":"16"},{"size":2196,"mtime":1610312546199,"results":"27","hashOfConfig":"16"},{"size":937,"mtime":1610312548034,"results":"28","hashOfConfig":"16"},{"size":319,"mtime":1610792499947,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"grhr71",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"33"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"33"},"/Users/justinquan/Desktop/code/gn-frontend/src/index.tsx",["69","70"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StoreProvider } from \"./state/Store\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport HomePage from \"./views/HomePage\";\nimport OrdersPage from \"./views/OrdersPage\";\nimport { Router, RouteComponentProps } from \"@reach/router\";\nimport AuthAPITest from \"./views/AuthTestPage\";\nimport config from \"./auth_config.json\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst onRedirectCallback = (appState: any) => {\n  // history.push(\n  //   appState && appState.returnTo\n  //     ? appState.returnTo\n  //     : window.location.pathname\n  // );\n};\n\nconst RouterPage = (\n  props: { pageComponent: JSX.Element } & RouteComponentProps\n) => props.pageComponent; //covered at 3:03\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    clientId={config.clientId}\n    audience={config.audience}\n    redirectUri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <StoreProvider>\n      <Router>\n        <RouterPage pageComponent={<HomePage />} path=\"/\" />\n        <RouterPage pageComponent={<OrdersPage />} path=\"/orders\" />\n        <RouterPage pageComponent={<AuthAPITest />} path=\"/testauth\" />\n      </Router>\n    </StoreProvider>\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n",["71","72"],"/Users/justinquan/Desktop/code/gn-frontend/src/state/Store.tsx",["73","74"],"/Users/justinquan/Desktop/code/gn-frontend/src/views/HomePage.tsx",["75"],"import React from \"react\";\nimport { Store } from \"../state/Store\";\nimport LandingPage from \"./LandingPage\";\nimport MenuPage from \"./MenuPage\";\n\nexport default function HomePage() {\n  const { state, dispatch } = React.useContext(Store);\n\n  return state.landing ? <LandingPage /> : <MenuPage />;\n}\n","/Users/justinquan/Desktop/code/gn-frontend/src/views/AuthTestPage.tsx",[],"/Users/justinquan/Desktop/code/gn-frontend/src/views/OrdersPage.tsx",["76","77"],"/Users/justinquan/Desktop/code/gn-frontend/src/state/Actions.ts",["78","79"],"import { IAction, IMeal, IState, IRestaurant } from \"./interfaces\";\n\nexport const fetchDataAction = async (dispatch: any) => {\n  //use aync for api calls 2:06\n  const URL = \"http://localhost:3001/api/menuItems/\";\n  const data = await fetch(URL); //fetches URL\n  const dataJSON = await data.json(); //convert to json\n  return dispatch({\n    //basically returns this object to our reducer in Store.tsx\n    type: \"FETCH_DATA\",\n    payload: dataJSON, //do ._embedded.episodes because we know basedo nthis specific api URL\n  });\n};\n\n//unused as of 1/9/2021. TODO: implement fully\nexport const fetchRestaurantsAction = async (dispatch: any) => {\n  //use aync for api calls 2:06\n  const URL = \"http://localhost:3001/api/restaurants/\";\n  const data = await fetch(URL); //fetches URL\n  const dataJSON = await data.json(); //convert to json\n  return dispatch({\n    //basically returns this object to our reducer in Store.tsx\n    type: \"FETCH_DATA\",\n    payload: dataJSON, //do ._embedded.episodes because we know basedo nthis specific api URL\n  });\n};\n\nexport const toggleFavAction = (\n  state: IState,\n  dispatch: any,\n  meal: IMeal | any\n): IAction => {\n  const mealInFav = state.orders.includes(meal);\n  let dispatchObj = {\n    type: \"ADD_FAV\",\n    payload: meal,\n  };\n  if (mealInFav) {\n    const favWithoutMeal = state.orders.filter(\n      (fav: IMeal) => fav.pk != meal.pk\n    ); //filter method removes obj if attribute is true\n    dispatchObj = {\n      type: \"REMOVE_FAV\",\n      payload: favWithoutMeal,\n    };\n  }\n  return dispatch(dispatchObj);\n};\n\n//need to fix and find a way to associate number of meals with each meal TODO/fix/bug. maybe can just add meal and then in the favs/order screen just combine the duplicates?\nexport const addMeal = (\n  state: IState,\n  dispatch: any,\n  meal: IMeal | any\n): IAction => {\n  // const episodeInFav = state.orders.includes(episode);\n  let dispatchObj = {\n    type: \"ADD_MEAL\",\n    payload: meal,\n  };\n  return dispatch(dispatchObj);\n};\n\n//need to fix and find a way to associate number of meals with each meal TODO/fix/bug. maybe can just add meal and then in the favs/order screen just combine the duplicates?\nexport const subtractMeal = (\n  state: IState,\n  dispatch: any,\n  meal: IMeal | any\n): IAction => {\n  // const episodeInFav = state.orders.includes(episode);\n  // let dispatchObj = {\n  //   type: \"SUBTRACT_MEAL\",\n  //   payload: episode,\n  // };\n  // return dispatch(dispatchObj);\n\n  const mealInOrders = state.orders.includes(meal);\n  let dispatchObj = {\n    type: \"NO_CHANGE\", //extra measure so that if there's no meal in orders, you can't subtract one\n    payload: meal, //don't really need because NO_CHANGE doesn't use episode\n  };\n  if (mealInOrders) {\n    var idx = state.orders.findIndex((curr: IMeal) => curr.pk === meal.pk); //gets index of first instance of meal\n    const ordersMinusOneMeal = state.orders;\n    ordersMinusOneMeal.splice(idx, 1); //removes first intance of the passed in meal\n\n    dispatchObj = {\n      type: \"SUBTRACT_MEAL\",\n      payload: ordersMinusOneMeal,\n    };\n  }\n  return dispatch(dispatchObj);\n};\n\nexport const goToMenu = async (\n  dispatch: any,\n  address: string,\n  geocode: any\n) => {\n  return dispatch({\n    //redirects to menu page, while settign the address and geocode\n    type: \"GO_TO_MENU\",\n    payload: { address: address, geocode: geocode },\n  });\n};\n","/Users/justinquan/Desktop/code/gn-frontend/src/views/MenuPage.tsx",[],"/Users/justinquan/Desktop/code/gn-frontend/src/App.tsx",["80","81","82","83","84","85","86","87"],"import React from \"react\";\nimport { isPartiallyEmittedExpression } from \"typescript\";\nimport { Store } from \"./state/Store\";\nimport { IAction, IMeal, IMealProps } from \"./state/interfaces\";\nimport { Link } from \"@reach/router\";\nimport logo from \"./assets/img/logo-blob.png\";\n// import \"./App.css\";\nimport Card from \"./components/Card\";\nimport \"./index.css\";\n\nconst EpisodeList = React.lazy<any>(() => import(\"./components/MealsList\")); //react lazy isntead of normal importing. see suspense and fallback below\n\nexport default function App(props: any): JSX.Element {\n  const { state, dispatch } = React.useContext(Store); //can remove \"dispatch\"\n  console.log(state);\n\n  return (\n    <React.Fragment>\n      {/* <header className=\"header\"> */}\n      <header className=\"header\">\n        <div>GN Logo and maybe dropdown Here</div>\n        <div className=\"nav-link-container\">\n          <Link to=\"/\" className=\"nav-text\">\n            Menu\n          </Link>\n        </div>\n        <div className=\"nav-link-container\">\n          <Link to=\"/orders\" className=\"nav-text\">\n            Orders: {state.orders.length}\n          </Link>\n        </div>\n      </header>\n      {props.children}\n    </React.Fragment>\n  ); //?not really sure about props.children\n}\n","/Users/justinquan/Desktop/code/gn-frontend/src/components/CartList.tsx",["88","89","90"],"import React from \"react\";\nimport { addMeal, subtractMeal } from \"../state/Actions\";\nimport { IMeal } from \"../state/interfaces\";\nimport Card from \"./Card\";\nimport CartCard from \"./CartCard\";\n\nexport default function CartList(props: any): Array<JSX.Element> {\n  const { meals, toggleFavAction, orders, store } = props;\n  const { state, dispatch } = store;\n\n  const uniqueMealsArray = Array.from(new Set<IMeal>(orders)); //Important: converts array to set, removing duplicates and then convert back to array\n\n  return uniqueMealsArray.map((meal: IMeal) => {\n    var numInCart = orders.filter((curr: IMeal) => meal.pk === curr.pk).length;\n    return (\n      <section key={meal.pk}>\n        <CartCard\n          meal={meal}\n          numInCart={numInCart}\n          addOnClick={() => addMeal(state, dispatch, meal)}\n          subtractOnClick={() => subtractMeal(state, dispatch, meal)}\n        />\n      </section>\n    );\n  }); //\n}\n","/Users/justinquan/Desktop/code/gn-frontend/src/views/LandingPage.tsx",["91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport background from \"../assets/img/landing-background.jpg\";\nimport { Hidden } from \"@material-ui/core\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport {\n  geocodeByAddress,\n  geocodeByPlaceId,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport { createLessThan } from \"typescript\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { getDistance } from \"geolib\";\nimport { Store } from \"../state/Store\";\nimport { goToMenu } from \"../state/Actions\";\nimport { notEqual } from \"assert\";\nimport { NONAME } from \"dns\";\nimport { Room, CheckCircle, Cancel, Loop } from \"@material-ui/icons\";\n\nconst thresh: number = 12;\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n  },\n  hero: {\n    backgroundImage: `url(${background})`,\n    backgroundSize: \"cover\",\n    height: \"60vh\",\n    width: \"100vw\",\n    margin: \"0px !important\",\n\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"4%\",\n  },\n  navContainer: {\n    width: \"100%\",\n    // flex: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  navBuffer: {\n    flex: 1,\n  },\n  titleContainer: {\n    width: \"100%\",\n    flex: 2,\n  },\n  title: {\n    fontFamily: \"Playfair Display\",\n    margin: \"0px !important\",\n    textAlign: \"center\",\n    fontSize: \"7em\",\n    color: \"#FFFBF5\",\n  },\n  signInContainer: {\n    zIndex: 1,\n    width: \"100%\",\n    top: 0,\n    flex: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  signIn: {\n    fontFamily: \"Playfair Display\",\n    textAlign: \"right\",\n    fontSize: \"3em\",\n    color: \"#FFFBF5\",\n    margin: \"6%\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  addressContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: \"1vh\",\n    // backgroundColor: 'red',\n\n    // alignItems: 'center',\n    // flex: 2,\n  },\n  addressInputContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    backgroundColor: \"#FFFBF5\",\n    border: \"none\",\n    width: \"56vw\",\n    height: \"10vh\",\n\n    borderRadius: \"5px\",\n  },\n  pinIconContainer: {\n    width: \"4vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  pinIcon: {\n    color: \"#545453\",\n    fontSize: \"3em\",\n  },\n  address: {\n    outline: \"none\",\n    backgroundColor: \"transparent\",\n    border: \"none\",\n    width: \"48vw\",\n    height: \"10vh\",\n\n    borderRadius: \"5px\",\n    // boxShadow: '0px 4px 20px rgba(0, 0, 0, 0.5)',\n\n    fontFamily: \"Playfair Display\",\n    fontSize: \"4em\",\n    color: \"#545453\",\n\n    MozBoxSizing: \"border-box\",\n    WebkitBoxSizing: \"border-box\",\n    boxSizing: \"border-box\",\n  },\n  validityIconContainer: {\n    width: \"4vw\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  loadingIcon: {\n    color: \"#C9512B\",\n    fontSize: \"3em\",\n  },\n  validIcon: {\n    color: \"#428D36\",\n    fontSize: \"3em\",\n  },\n  invalidIcon: {\n    color: \"#BC2F2F\",\n    fontSize: \"3em\",\n  },\n  addressSuggestionBox: {\n    backgroundColor: \"#FFFBF5\",\n    border: \"none\",\n    width: \"56vw\",\n    borderRadius: \"5px\",\n    boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.5)\",\n\n    MozBoxSizing: \"border-box\",\n    WebkitBoxSizing: \"border-box\",\n    boxSizing: \"border-box\",\n    \"&hover\": {\n      backgroundColor: \"pink\",\n    },\n  },\n  addressSuggestionItem: {\n    fontFamily: \"Playfair Display\",\n    color: \"#545453\",\n    fontSize: \"4em\",\n    width: \"56vw\",\n    padding: \"2%\",\n\n    MozBoxSizing: \"border-box\",\n    WebkitBoxSizing: \"border-box\",\n    boxSizing: \"border-box\",\n    // backgroundColor: 'pink',\n\n    // \"&hover\": {\n    //   backgroundColor: 'pink',\n    // }\n  },\n  heroBuffer: {\n    flex: 1,\n  },\n  validAddressButton: {\n    backgroundColor: \"#C9512B\",\n    color: \"#FFFBF5\",\n    border: \"none\",\n    width: \"56vw\",\n    padding: \"2%\",\n    borderRadius: \"5px\",\n    fontFamily: \"Playfair Display\",\n    fontSize: \"4em\",\n    boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.5)\",\n  },\n  invalidAddressButton: {\n    backgroundColor: \"#BC2F2F\",\n    color: \"#FFFBF5\",\n    border: \"none\",\n    width: \"56vw\",\n    padding: \"2%\",\n    borderRadius: \"5px\",\n    fontFamily: \"Playfair Display\",\n    fontSize: \"4em\",\n    boxShadow: \"0px 4px 20px rgba(0, 0, 0, 0.5)\",\n  },\n});\n\nexport default function LandingPage() {\n  const { state, dispatch } = React.useContext(Store);\n\n  const { user, isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  var classes = useStyles();\n  var [addressState, handleAddressChange] = useState<string>(\"\");\n  var [geocode, handleGeocodeChange] = useState<any>(null);\n  var [validAddress, setValidAddress] = useState<boolean>(false);\n  var [coveredAddress, setCoveredAddress] = useState<boolean>(false);\n\n  var setGeocode = (latLng: any) => {\n    console.log(latLng);\n    var distance: number = getDistance(\n      { latitude: 37.872055, longitude: -122.260013 },\n      latLng\n    );\n    console.log(distance);\n    handleGeocodeChange(latLng);\n    setCoveredAddress(distance <= 1500);\n    setValidAddress(true);\n  };\n\n  var setAddressError = (error: any) => {\n    console.log(error);\n    setValidAddress(false);\n  };\n\n  var handleAddressSelect = (address: string) => {\n    handleAddressChange(address);\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => setGeocode(latLng))\n      .catch((error) => setAddressError(error));\n  };\n\n  return (\n    <div>\n      <React.Fragment>\n        <div className={classes.container}>\n          <div className={classes.hero}>\n            <div className={classes.navContainer}>\n              <div className={classes.navBuffer}></div>\n              <div className={classes.titleContainer}>\n                <h1 className={classes.title}>Good Neighbor.</h1>\n              </div>\n              <div className={classes.signInContainer}>\n                {!isAuthenticated && (\n                  <h1\n                    className={classes.signIn}\n                    onClick={() => loginWithRedirect()}\n                  >\n                    Sign In.\n                  </h1>\n                )}\n              </div>\n            </div>\n            <PlacesAutocomplete\n              value={addressState}\n              onChange={handleAddressChange}\n              onSelect={handleAddressSelect}\n            >\n              {({\n                getInputProps,\n                suggestions,\n                getSuggestionItemProps,\n                loading,\n              }) => (\n                <div className={classes.addressContainer}>\n                  <div className={classes.addressInputContainer}>\n                    <div className={classes.pinIconContainer}>\n                      <Room className={classes.pinIcon}></Room>\n                    </div>\n                    <input\n                      className={classes.address}\n                      {...getInputProps({\n                        placeholder: \"Enter Delivery Address\",\n                        // className: 'location-search-input',\n                      })}\n                    />\n                    <div className={classes.validityIconContainer}>\n                      {loading ? (\n                        <Loop className={classes.loadingIcon}></Loop>\n                      ) : (\n                        addressState !== \"\" &&\n                        (geocode && coveredAddress ? (\n                          <CheckCircle\n                            className={classes.validIcon}\n                          ></CheckCircle>\n                        ) : (\n                          <Cancel className={classes.invalidIcon}></Cancel>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                  {loading || suggestions.length > 0 ? (\n                    <div className={classes.addressSuggestionBox}>\n                      {loading && (\n                        <div className={classes.addressSuggestionItem}>\n                          Loading...\n                        </div>\n                      )}\n                      {suggestions.map((suggestion, myKey) => {\n                        const className = suggestion.active\n                          ? \"suggestion-item--active\"\n                          : \"suggestion-item\";\n                        // inline style for demonstration purpose\n                        const style = suggestion.active\n                          ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                          : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                        return (\n                          <div\n                            className={classes.addressSuggestionItem}\n                            // key={myKey}\n\n                            {...getSuggestionItemProps(suggestion, {\n                              // className,\n                              // style,\n                            })}\n                          >\n                            <span\n                              onClick={() =>\n                                handleAddressSelect(suggestion.description)\n                              }\n                            >\n                              {suggestion.description}\n                            </span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  ) : (\n                    geocode &&\n                    (coveredAddress ? (\n                      <button\n                        className={classes.validAddressButton}\n                        onClick={() =>\n                          goToMenu(dispatch, addressState, geocode)\n                        }\n                      >\n                        View Menu\n                      </button>\n                    ) : (\n                      <a href=\"\">\n                        <button className={classes.invalidAddressButton}>\n                          We don't deliver there... yet. <br /> Click to fill\n                          out update form!\n                        </button>\n                      </a>\n                    ))\n                  )}\n                </div>\n              )}\n            </PlacesAutocomplete>\n            {/* <div className={classes.heroBuffer}></div> */}\n          </div>\n        </div>\n      </React.Fragment>\n    </div>\n  );\n}\n","/Users/justinquan/Desktop/code/gn-frontend/src/components/CartCard.tsx",["104","105","106","107","108","109","110","111","112","113"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../index.css\";\nimport addImg from \"../assets/img/add.png\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 500,\n    height: 300,\n  },\n  media: {\n    height: 210,\n  },\n  cardContent: {\n    height: 55,\n  },\n});\n\nexport default function CartCard(props: any) {\n  const classes = useStyles();\n\n  return (\n    <div className=\"cart-card-container\">\n      <div className=\"cart-card-second-container\">\n        <img className=\"cart-card-img\" src={props.meal.picture_url}></img>\n        <div className=\"cart-card-content\">\n          <div className=\"cart-card-title\">{props.meal.foodName}</div>\n          <div className=\"cart-card-price\">\n            ${props.meal.price} | Restaurant: {props.meal.restaurant_info.name}\n          </div>\n          <div className=\"cart-card-buttons-container\">\n            <div className=\"cart-card-buttons\">\n              <div onClick={props.subtractOnClick}>-</div>\n              {props.numInCart}\n              <div onClick={props.addOnClick}>+</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    // <Card className={classes.root}>\n    //   <div>\n    //     <CardMedia\n    //       className={classes.media}\n    //       image={props.episode.image.medium}\n    //       title={props.episode.name}\n    //     />\n    //     <CardContent className={classes.cardContent}>\n    //       <div className=\"cardTitle\">{props.episode.name}</div>\n    //       <div className=\"cardText\">{limitedSummary}</div>\n    //     </CardContent>\n    //   </div>\n    //   <div className=\"card-bottom-flex-container\">\n    //     <Button onClick={props.addOnClick}>\n    //       <img src={addImg} className=\"cardAddBtn\" />\n    //     </Button>\n    //     <div className=\"cardPrice\">\n    //       <p>${props.episode.number}</p>\n    //     </div>\n    //   </div>\n    // </Card>\n  );\n}\n","/Users/justinquan/Desktop/code/gn-frontend/src/components/Card.tsx",["114","115","116","117","118","119"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"../index.css\";\nimport addImg from \"../assets/img/add.png\";\nimport { colors } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 330,\n    height: 365,\n  },\n  media: {\n    height: 220,\n  },\n  cardContent: {\n    height: 40,\n    // backgroundColor: \"#FFFBF5\",\n  },\n});\n\nexport default function MediaCard(props: any) {\n  const classes = useStyles();\n  const MAX_SUMMARY_LENGTH = 120;\n\n  var limitedSummary = props.meal.description; //prevents overflow, limits description length of the meal. TODO 1/8: ADD DESCRIPTION TO BACKEND!\n  //UNCOMMENT THE BOTTOM 4 LINES IF YOU WANT TO LIMIT MEAL DESCRIPTION/SUMMARY TO CERTAIN NUMBER OF CHARS INSTEAD OF HAVING POTENTIALLY INFINITE OVERFLOW\n  // if (limitedSummary != null && limitedSummary.length >= MAX_SUMMARY_LENGTH) {//if there's an empty string the first condition prevents error\n  //   limitedSummary = limitedSummary.substring(0, MAX_SUMMARY_LENGTH);\n  //   limitedSummary += \"...\";\n  // }\n\n  return (\n    <Card className={classes.root}>\n      <div>\n        <CardMedia\n          className={classes.media}\n          image={props.meal.picture_url}\n          title={props.meal.name}\n        />\n        <CardContent className={classes.cardContent}>\n          <div className=\"cardTitle\">{props.meal.foodName}</div>\n          <div className=\"cardTextContainer\">\n            <div className=\"cardText\">{limitedSummary}</div>\n          </div>\n        </CardContent>\n      </div>\n      <div className=\"card-bottom-flex-container\">\n        <Button onClick={props.addOnClick}>\n          <img src={addImg} className=\"cardAddBtn\" />\n        </Button>\n        <div className=\"cardPrice\">\n          <p>${props.meal.price}</p>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","/Users/justinquan/Desktop/code/gn-frontend/src/components/MealsList.tsx",["120","121"],"import React from \"react\";\nimport { addMeal, subtractMeal } from \"../state/Actions\";\nimport { IMeal } from \"../state/interfaces\";\nimport Card from \"./Card\";\nimport CartCard from \"./CartCard\";\n\nexport default function MealsList(props: any): Array<JSX.Element> {\n  const { meals, toggleFavAction, orders, store } = props;\n  const { state, dispatch } = store;\n\n  return meals.map((meal: IMeal) => {\n    var numInCart = orders.filter((curr: IMeal) => meal.pk === curr.pk).length; //TODO: fix bug, when boolean from app.tsx is on, cart has bug where it displays multiple cards for the same meal. might be tied to this part but prob not.\n    return (\n      <section key={meal.pk} className=\"meal-box\">\n        <Card\n          meal={meal}\n          numInCart={numInCart}\n          addOnClick={() => addMeal(state, dispatch, meal)}\n          subtractOnClick={() => subtractMeal(state, dispatch, meal)}\n        />\n      </section>\n    );\n  });\n}\n","/Users/justinquan/Desktop/code/gn-frontend/src/components/VenmoBtn.tsx",["122","123"],"import React from 'react'\nimport venmoImg from \"../assets/img/venmo.png\";\nimport { Link } from \"@reach/router\";\n\n\n\nexport default function VenmoBtn(props : any) {\n    return (\n      <div>\n        <a href={props.paymentLink}>\n          <img className=\"venmo-btn\" src={venmoImg}></img>\n        </a>\n      </div>\n    );\n}\n",{"ruleId":"124","severity":1,"message":"125","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":11},{"ruleId":"124","severity":1,"message":"128","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":23},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":47,"column":15,"nodeType":"126","messageId":"135","endLine":47,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":50,"column":15,"nodeType":"126","messageId":"135","endLine":50,"endColumn":20},{"ruleId":"124","severity":1,"message":"136","line":7,"column":18,"nodeType":"126","messageId":"127","endLine":7,"endColumn":26},{"ruleId":"124","severity":1,"message":"137","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":20},{"ruleId":"124","severity":1,"message":"138","line":9,"column":7,"nodeType":"126","messageId":"127","endLine":9,"endColumn":18},{"ruleId":"124","severity":1,"message":"139","line":1,"column":34,"nodeType":"126","messageId":"127","endLine":1,"endColumn":45},{"ruleId":"140","severity":1,"message":"141","line":40,"column":30,"nodeType":"142","messageId":"143","endLine":40,"endColumn":32},{"ruleId":"124","severity":1,"message":"144","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":38},{"ruleId":"124","severity":1,"message":"145","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"146","line":4,"column":19,"nodeType":"126","messageId":"127","endLine":4,"endColumn":24},{"ruleId":"124","severity":1,"message":"137","line":4,"column":26,"nodeType":"126","messageId":"127","endLine":4,"endColumn":36},{"ruleId":"124","severity":1,"message":"147","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":12},{"ruleId":"124","severity":1,"message":"148","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":12},{"ruleId":"124","severity":1,"message":"138","line":11,"column":7,"nodeType":"126","messageId":"127","endLine":11,"endColumn":18},{"ruleId":"124","severity":1,"message":"136","line":14,"column":18,"nodeType":"126","messageId":"127","endLine":14,"endColumn":26},{"ruleId":"124","severity":1,"message":"148","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":12},{"ruleId":"124","severity":1,"message":"149","line":8,"column":11,"nodeType":"126","messageId":"127","endLine":8,"endColumn":16},{"ruleId":"124","severity":1,"message":"150","line":8,"column":18,"nodeType":"126","messageId":"127","endLine":8,"endColumn":33},{"ruleId":"124","severity":1,"message":"151","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":16},{"ruleId":"124","severity":1,"message":"152","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":19},{"ruleId":"124","severity":1,"message":"153","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":24},{"ruleId":"124","severity":1,"message":"154","line":16,"column":10,"nodeType":"126","messageId":"127","endLine":16,"endColumn":18},{"ruleId":"124","severity":1,"message":"155","line":17,"column":10,"nodeType":"126","messageId":"127","endLine":17,"endColumn":16},{"ruleId":"124","severity":1,"message":"156","line":20,"column":7,"nodeType":"126","messageId":"127","endLine":20,"endColumn":21},{"ruleId":"124","severity":1,"message":"157","line":200,"column":11,"nodeType":"126","messageId":"127","endLine":200,"endColumn":16},{"ruleId":"124","severity":1,"message":"158","line":202,"column":11,"nodeType":"126","messageId":"127","endLine":202,"endColumn":15},{"ruleId":"124","severity":1,"message":"159","line":202,"column":53,"nodeType":"126","messageId":"127","endLine":202,"endColumn":59},{"ruleId":"124","severity":1,"message":"160","line":207,"column":8,"nodeType":"126","messageId":"127","endLine":207,"endColumn":20},{"ruleId":"124","severity":1,"message":"161","line":302,"column":31,"nodeType":"126","messageId":"127","endLine":302,"endColumn":40},{"ruleId":"124","severity":1,"message":"162","line":306,"column":31,"nodeType":"126","messageId":"127","endLine":306,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":342,"column":23,"nodeType":"165","endLine":342,"endColumn":34},{"ruleId":"124","severity":1,"message":"148","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":12},{"ruleId":"124","severity":1,"message":"166","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":22},{"ruleId":"124","severity":1,"message":"167","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":19},{"ruleId":"124","severity":1,"message":"168","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":19},{"ruleId":"124","severity":1,"message":"169","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":17},{"ruleId":"124","severity":1,"message":"170","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":14},{"ruleId":"124","severity":1,"message":"171","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":18},{"ruleId":"124","severity":1,"message":"172","line":11,"column":8,"nodeType":"126","messageId":"127","endLine":11,"endColumn":14},{"ruleId":"124","severity":1,"message":"173","line":27,"column":9,"nodeType":"126","messageId":"127","endLine":27,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":32,"column":9,"nodeType":"165","endLine":32,"endColumn":69},{"ruleId":"124","severity":1,"message":"166","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":22},{"ruleId":"124","severity":1,"message":"167","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":19},{"ruleId":"124","severity":1,"message":"171","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":18},{"ruleId":"124","severity":1,"message":"176","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":16},{"ruleId":"124","severity":1,"message":"177","line":30,"column":9,"nodeType":"126","messageId":"127","endLine":30,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":56,"column":11,"nodeType":"165","endLine":56,"endColumn":54},{"ruleId":"124","severity":1,"message":"178","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":16},{"ruleId":"124","severity":1,"message":"150","line":8,"column":18,"nodeType":"126","messageId":"127","endLine":8,"endColumn":33},{"ruleId":"124","severity":1,"message":"179","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":11,"column":11,"nodeType":"165","endLine":11,"endColumn":53},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'reportWebVitals' is defined but never used.","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-self-assign","'state' is assigned to itself.","selfAssignment","'dispatch' is assigned a value but never used.","'IMealProps' is defined but never used.","'EpisodeList' is assigned a value but never used.","'IRestaurant' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'isPartiallyEmittedExpression' is defined but never used.","'IAction' is defined but never used.","'IMeal' is defined but never used.","'logo' is defined but never used.","'Card' is defined but never used.","'meals' is assigned a value but never used.","'toggleFavAction' is assigned a value but never used.","'Hidden' is defined but never used.","'geocodeByPlaceId' is defined but never used.","'createLessThan' is defined but never used.","'notEqual' is defined but never used.","'NONAME' is defined but never used.","'thresh' is assigned a value but never used.","'state' is assigned a value but never used.","'user' is assigned a value but never used.","'logout' is assigned a value but never used.","'validAddress' is assigned a value but never used.","'className' is assigned a value but never used.","'style' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'addImg' is defined but never used.","'classes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'colors' is defined but never used.","'MAX_SUMMARY_LENGTH' is assigned a value but never used.","'CartCard' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]